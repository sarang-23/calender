{"version":3,"sources":["logo.svg","assets/calenderIcon.svg","assets/dropdownIcon.svg","helper/dateHelper.js","components/Controller.jsx","components/DateComponent.jsx","helper/styleHelper.js","components/Calender.jsx","App.js","reportWebVitals.js","index.js"],"names":["MONTHS","getDaysArr","month","year","daysArr","Array","firstDayNum","Date","getDay","console","log","daysInMonth","getDate","getDaysInMonth","lastDatePrevMonth","i","displayDate","count","j","toLocaleString","minimumIntegerDigits","useGrouping","isCurrMonth","k","useStyles","makeStyles","controller","color","backgroundColor","margin","borderRadius","height","display","alignItems","today","float","justifyContent","fontFamily","fontSize","padding","calenderIcon","marginRight","monthSelector","borderRight","position","left","transform","cursor","right","marginLeft","selectedMonth","fontWeight","minWidth","Controller","props","index","classes","className","src","dropdownIcon","onClick","updateMonth","Typography","selectedYear","useStyle","date","lineHeight","notCurrMonth","DateComponent","classNames","Calender","state","dt","getMonth","getFullYear","this","setState","selectedDay","direction","isFirstMonth","isLastMonth","columns","Paper","calenderContainer","dir","Table","calenderTable","TableHead","calenderHead","TableRow","calenderRow","map","day","TableCell","align","headCell","days","toUpperCase","TableBody","calenderBody","row","col","bodyCell","React","Component","withStyles","theme","width","borderBottom","fontStretch","fontStyle","letterSpacing","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1a8877.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/calenderIcon.2bf105c2.svg\";","export default __webpack_public_path__ + \"static/media/dropdownIcon.1e134aa9.svg\";","\n\nconst MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\n export const getDaysInMonth = (month, year) => {\n    var daysInMonth = new Date(year, month+1, 0).getDate();\n    return daysInMonth;\n }\n\nexport const getMonthName = (index) =>{\n    return MONTHS[index];\n}\n\nexport const getDaysArr = (month, year) => {\n    let daysArr = new Array(43);\n    let firstDay = new Date(year, month);\n    let firstDayNum = firstDay.getDay();\n    firstDayNum = firstDayNum === 0 ? 7 : firstDayNum;\n    console.log(firstDayNum)\n    let daysInMonth = getDaysInMonth(month, year);\n    let lastDayPrevMonth = new Date(year, month, 0);\n    let lastDatePrevMonth = lastDayPrevMonth.getDate();\n    for(let i= firstDayNum-1; i>0; i--){\n        daysArr[i] = {\n            displayDate : lastDatePrevMonth--\n        }\n    }\n    let count = 1;\n    for(let j =firstDayNum; j< firstDayNum+daysInMonth; j++){\n        daysArr[j] = {\n            displayDate : count.toLocaleString('en-US',\n           { minimumIntegerDigits: 2,\n            useGrouping: false}),\n            isCurrMonth : true\n        }\n        count ++;\n    }\n    count=1;\n    for(let k=firstDayNum+daysInMonth; k<43; k++){\n        daysArr[k] = {\n            displayDate : count.toLocaleString('en-US',\n            { minimumIntegerDigits: 2,\n             useGrouping: false})\n        }\n        count++;\n    }\n    return daysArr;\n}","import { makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport calenderIcon from '../assets/calenderIcon.svg';\nimport dropdownIcon from '../assets/dropdownIcon.svg'\nimport { getMonthName } from '../helper/dateHelper';\n\nconst useStyles = makeStyles({\n    controller: {\n        color: '#e6e6e6',\n        backgroundColor: 'rgba(255, 255, 255, 0.06)',\n        margin: '10px 20px',\n        borderRadius : 100,\n        height :38,\n        display : 'flex',\n        alignItems : 'center'\n    },\n    today : {\n        float : 'left',\n        backgroundColor : '#0f6ebe',\n        height : '100%',\n        borderRadius : '100px 0 0 100px',\n        display : 'flex',\n        justifyContent : 'center',\n        alignItems : 'center',\n        fontFamily: 'Poppins',\n        fontSize : 14,\n        padding : '0 20px'\n    },\n    calenderIcon : {\n        marginRight: 5\n    },\n    monthSelector : {\n        display : 'flex',\n        alignItems : 'center',\n        height : '100%',\n        padding : '0 15px',\n        borderRight : '1px solid black',\n        position: 'relative'\n    },\n    left : {\n        transform : 'rotate(180deg)',\n        marginRight : 5,\n        cursor: 'pointer',\n    },\n    right : {\n        marginLeft : 5,\n        cursor: 'pointer'\n    },\n    selectedMonth: {\n        fontSize : 12,\n        fontWeight : 500,\n        color: '#999999', \n        fontFamily : 'Poppins',\n        minWidth : 100\n    }\n})\n\nexport default function Controller(props){\n    const classes = useStyles();\n    return(\n        <>\n             <div className={classes.controller}>\n                <div className={classes.today}>\n                    <img src={calenderIcon} className={classes.calenderIcon}></img>\n                    <p>Today</p>\n                </div>\n                <div className={classes.monthSelector}>\n                    <img src={dropdownIcon} className={classes.left} onClick={()=>props.updateMonth('left')}/>\n                    <Typography className={classes.selectedMonth}> {getMonthName(props.selectedMonth)} {props.selectedYear} </Typography>\n                    <img src={dropdownIcon} className={classes.right} onClick={()=>props.updateMonth('right')}/>\n\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport classNames from 'classnames';\n\nconst useStyle = makeStyles({\n    date : {\n        margin: '0 2px 0 0',\n        fontFamily: 'Poppins',\n        fontSize: 24,\n        fontWeight: 'bold',\n        lineHeight: 1.17,\n        color: '#e6e6e6'\n    },\n    notCurrMonth : {\n        color: \"#999999\"\n    }\n})\n\nexport default function DateComponent(props){\n    const classes = useStyle();\n    return(\n        <>\n             <Typography className={classNames(classes.date, (props.date && !props.date.isCurrMonth) ? classes.notCurrMonth : '')}>{props.date && props.date[\"displayDate\"]}</Typography>\n        </>\n    )\n}","export const getTableStyles = () => {\n    return {\n        calenderContainer:{\n            margin: '20px auto',\n            width : '80%',\n            backgroundColor: '#121212',\n            padding :10\n        },\n    \n        calenderTable:{\n            padding: '22px 8px',\n            color: 'white',\n            \n        },\n        calenderHead:{\n            backgroundColor: '#121212',\n            color: '#999999'\n        },\n        headCell:{\n            borderBottom: 'none'\n        },\n        bodyCell:{\n            borderBottom: 'none',\n            borderRight: '1px',\n            width: 176,\n            height: 100,\n            color: '#e6e6e6',\n            '&.evenRow':{\n                    '&:nth-child(even)':{\n                        backgroundColor: 'rgba(255, 255, 255, 0.06)'\n                    }\n            },\n            '&.oddRow':{\n                '&:nth-child(odd)':{\n                    backgroundColor: 'rgba(255, 255, 255, 0.06)'\n                }\n        }\n        },\n        days:{\n            fontFamily: 'Poppins',\n            fontSize: 14,\n            fontWeight: 'normal',\n            fontStretch : 'normal',\n            fontStyle: 'normal',\n            lineHeight: 1.29,\n            letterSpacing: 0.6,\n            color: '#999999'\n        }\n    }\n}","import React from 'react';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableHead, Typography } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\nimport Controller from './Controller';\nimport DateComponent from './DateComponent';\nimport { getTableStyles } from '../helper/styleHelper';\nimport { getDaysArr } from '../helper/dateHelper';\n\nconst styles = theme => ( getTableStyles(theme) );\n\nclass Calender extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            daysArr : []\n        }\n    }\n    \n    componentDidMount(){\n        var dt = new Date();\n        var month = dt.getMonth() + 1;\n        var year = dt.getFullYear();\n        this.setState({\n            ...this.state,\n            selectedDay : dt, \n            selectedMonth : month-1,\n            selectedYear : year,\n            daysArr : getDaysArr(month-1, year)\n        })\n    }\n\n    updateMonth(direction){\n        let isFirstMonth = this.state.selectedMonth === 0;\n        let isLastMonth = this.state.selectedMonth === 11;\n        if(direction === 'left'){               \n            let selectedMonth = isFirstMonth ? 12 : this.state.selectedMonth - 1;\n            let selectedYear = isFirstMonth ? this.state.selectedYear - 1 : this.state.selectedYear;\n            let daysArr = getDaysArr(selectedMonth, selectedYear);\n                this.setState((state)=>{\n                    return{\n                        ...state,\n                        selectedMonth, \n                        selectedYear,\n                        daysArr\n                    }\n                });\n        } else {\n            let selectedMonth = isLastMonth ? 1 : this.state.selectedMonth + 1;\n            let selectedYear = isLastMonth ? this.state.selectedYear + 1 : this.state.selectedYear;\n            let daysArr = getDaysArr(selectedMonth, selectedYear)\n            this.setState((state) => {\n                return {\n                    ...state, \n                    selectedMonth,\n                    selectedYear,\n                    daysArr\n                }\n            });\n        }\n    }\n\n    render(){\n        let { classes } = this.props;\n        let { selectedMonth, selectedYear, daysArr } = this.state;\n        let rows = [0,1,2,3,4,5];\n        let columns = [1,2,3,4,5,6,7];\n        let days = ['Monday' ,'Tuesday' , 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n        return(\n            <>\n                <Paper className={classes.calenderContainer}>\n                   <Controller selectedMonth = {selectedMonth} selectedYear={selectedYear} updateMonth={(dir)=>this.updateMonth(dir)}/>\n                    <Table className={classes.calenderTable}>\n                        <TableHead className={classes.calenderHead}>\n                                <TableRow className={classes.calenderRow}>\n                                    {\n                                        days.map((day, index)=> (\n                                            <TableCell align=\"center\" className={classes.headCell} key={index}>\n                                                <Typography className={classes.days}>{day.toUpperCase()}</Typography> \n                                            </TableCell>\n                                        ))\n                                    }\n                                </TableRow>\n                            </TableHead>\n                            <TableBody className={classes.calenderBody}>\n                                {\n                                    rows.map((row)=>(\n                                        <TableRow className={classes.calenderRow} key={row}>\n                                            {columns.map((col) => (\n                                                <TableCell key ={col+row} className={classNames(classes.bodyCell, row%2 == 0 ? 'evenRow' : 'oddRow')}>\n                                                    <DateComponent date={daysArr[row*7 + col]}/>\n                                                </TableCell>\n                                            ))}\n                                        </TableRow>\n                                    ))\n                                }\n\n                            </TableBody>\n                    </Table>\n                </Paper>\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(Calender); ","import logo from './logo.svg';\nimport './App.scss';\nimport Calender from './components/Calender';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calender/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}